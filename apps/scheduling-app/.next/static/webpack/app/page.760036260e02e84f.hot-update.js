"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/hooks/useAvailability.ts":
/*!**************************************!*\
  !*** ./app/hooks/useAvailability.ts ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useAvailability: () => (/* binding */ useAvailability)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/../../node_modules/.pnpm/next@15.5.5_react-dom@18.3.1_react@18.3.1__react@18.3.1_sass@1.93.2/node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n// Helper function to transform slotstart from string to Date\nconst transformAvailabilityDates = (data)=>{\n    if (!data) return data;\n    if (Array.isArray(data)) {\n        return data.map((slot)=>({\n                ...slot,\n                slotstart: slot.slotstart ? new Date(slot.slotstart) : slot.slotstart\n            }));\n    }\n    return data;\n};\nconst useAvailability = (param)=>{\n    let { baseUrl } = param;\n    const fetchAvailability = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useAvailability.useCallback[fetchAvailability]\": async (providerId)=>{\n            try {\n                var _rawData_data_providerId, _rawData_data, _transformedData_data_providerId, _transformedData_data;\n                const response = await fetch(\"/api/sol/providers/\".concat(providerId, \"/availability\"), {\n                    headers: {\n                        'x-sol-api-url': baseUrl\n                    }\n                });\n                if (!response.ok) {\n                    throw new Error(\"Failed to fetch availability for provider \".concat(providerId, \": \").concat(response.statusText));\n                }\n                const rawData = await response.json();\n                // Transform date strings to Date objects\n                const transformedData = transformAvailabilityDates(rawData);\n                console.log('Availability data transformed:', {\n                    raw: rawData === null || rawData === void 0 ? void 0 : (_rawData_data = rawData.data) === null || _rawData_data === void 0 ? void 0 : (_rawData_data_providerId = _rawData_data[providerId]) === null || _rawData_data_providerId === void 0 ? void 0 : _rawData_data_providerId[0],\n                    transformed: transformedData === null || transformedData === void 0 ? void 0 : (_transformedData_data = transformedData.data) === null || _transformedData_data === void 0 ? void 0 : (_transformedData_data_providerId = _transformedData_data[providerId]) === null || _transformedData_data_providerId === void 0 ? void 0 : _transformedData_data_providerId[0]\n                });\n                return transformedData;\n            } catch (error) {\n                console.error('Error fetching availability:', error);\n                throw error;\n            }\n        }\n    }[\"useAvailability.useCallback[fetchAvailability]\"], [\n        baseUrl\n    ]);\n    return {\n        fetchAvailability\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9ob29rcy91c2VBdmFpbGFiaWxpdHkudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQW9DO0FBT3BDLDZEQUE2RDtBQUM3RCxNQUFNQyw2QkFBNkIsQ0FBQ0M7SUFDbEMsSUFBSSxDQUFDQSxNQUFNLE9BQU9BO0lBRWxCLElBQUlDLE1BQU1DLE9BQU8sQ0FBQ0YsT0FBTztRQUN2QixPQUFPQSxLQUFLRyxHQUFHLENBQUNDLENBQUFBLE9BQVM7Z0JBQ3ZCLEdBQUdBLElBQUk7Z0JBQ1BDLFdBQVdELEtBQUtDLFNBQVMsR0FBRyxJQUFJQyxLQUFLRixLQUFLQyxTQUFTLElBQUlELEtBQUtDLFNBQVM7WUFDdkU7SUFDRjtJQUVBLE9BQU9MO0FBQ1Q7QUFFTyxNQUFNTyxrQkFBa0I7UUFBQyxFQUFFQyxPQUFPLEVBQXlCO0lBQ2hFLE1BQU1DLG9CQUFvQlgsa0RBQVdBOzBEQUNuQyxPQUFPWTtZQUNMLElBQUk7b0JBaUJLQywwQkFBQUEsZUFDUUMsa0NBQUFBO2dCQWpCZixNQUFNQyxXQUFXLE1BQU1DLE1BQU0sc0JBQWlDLE9BQVhKLFlBQVcsa0JBQWdCO29CQUM1RUssU0FBUzt3QkFDUCxpQkFBaUJQO29CQUNuQjtnQkFDRjtnQkFFQSxJQUFJLENBQUNLLFNBQVNHLEVBQUUsRUFBRTtvQkFDaEIsTUFBTSxJQUFJQyxNQUFNLDZDQUE0REosT0FBZkgsWUFBVyxNQUF3QixPQUFwQkcsU0FBU0ssVUFBVTtnQkFDakc7Z0JBRUEsTUFBTVAsVUFBVSxNQUFNRSxTQUFTTSxJQUFJO2dCQUVuQyx5Q0FBeUM7Z0JBQ3pDLE1BQU1QLGtCQUFrQmIsMkJBQTJCWTtnQkFFbkRTLFFBQVFDLEdBQUcsQ0FBQyxrQ0FBa0M7b0JBQzVDQyxHQUFHLEVBQUVYLG9CQUFBQSwrQkFBQUEsZ0JBQUFBLFFBQVNYLElBQUksY0FBYlcscUNBQUFBLDJCQUFBQSxhQUFlLENBQUNELFdBQVcsY0FBM0JDLCtDQUFBQSx3QkFBNkIsQ0FBQyxFQUFFO29CQUNyQ1ksV0FBVyxFQUFFWCw0QkFBQUEsdUNBQUFBLHdCQUFBQSxnQkFBaUJaLElBQUksY0FBckJZLDZDQUFBQSxtQ0FBQUEscUJBQXVCLENBQUNGLFdBQVcsY0FBbkNFLHVEQUFBQSxnQ0FBcUMsQ0FBQyxFQUFFO2dCQUN2RDtnQkFFQSxPQUFPQTtZQUNULEVBQUUsT0FBT1ksT0FBTztnQkFDZEosUUFBUUksS0FBSyxDQUFDLGdDQUFnQ0E7Z0JBQzlDLE1BQU1BO1lBQ1I7UUFDRjt5REFDQTtRQUFDaEI7S0FBUTtJQUdYLE9BQU87UUFBRUM7SUFBa0I7QUFDN0IsRUFBRSIsInNvdXJjZXMiOlsiL1VzZXJzL2piL2F3ZWxsL3NvbC1zY2hlZHVsaW5nL2FwcHMvc2NoZWR1bGluZy1hcHAvYXBwL2hvb2tzL3VzZUF2YWlsYWJpbGl0eS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB0eXBlIHsgR2V0QXZhaWxhYmlsaXRpZXNSZXNwb25zZVR5cGUgfSBmcm9tICcuLi8uLi8uLi8uLi9wYWNrYWdlcy9zY2hlZHVsZXIvZGlzdC9pbmRleC5kLnRzJztcblxuaW50ZXJmYWNlIFVzZUF2YWlsYWJpbGl0eUNvbmZpZyB7XG4gIGJhc2VVcmw6IHN0cmluZztcbn1cblxuLy8gSGVscGVyIGZ1bmN0aW9uIHRvIHRyYW5zZm9ybSBzbG90c3RhcnQgZnJvbSBzdHJpbmcgdG8gRGF0ZVxuY29uc3QgdHJhbnNmb3JtQXZhaWxhYmlsaXR5RGF0ZXMgPSAoZGF0YTogYW55KTogYW55ID0+IHtcbiAgaWYgKCFkYXRhKSByZXR1cm4gZGF0YTtcblxuICBpZiAoQXJyYXkuaXNBcnJheShkYXRhKSkge1xuICAgIHJldHVybiBkYXRhLm1hcChzbG90ID0+ICh7XG4gICAgICAuLi5zbG90LFxuICAgICAgc2xvdHN0YXJ0OiBzbG90LnNsb3RzdGFydCA/IG5ldyBEYXRlKHNsb3Quc2xvdHN0YXJ0KSA6IHNsb3Quc2xvdHN0YXJ0XG4gICAgfSkpO1xuICB9XG5cbiAgcmV0dXJuIGRhdGE7XG59O1xuXG5leHBvcnQgY29uc3QgdXNlQXZhaWxhYmlsaXR5ID0gKHsgYmFzZVVybCB9OiBVc2VBdmFpbGFiaWxpdHlDb25maWcpID0+IHtcbiAgY29uc3QgZmV0Y2hBdmFpbGFiaWxpdHkgPSB1c2VDYWxsYmFjayhcbiAgICBhc3luYyAocHJvdmlkZXJJZDogc3RyaW5nKTogUHJvbWlzZTxHZXRBdmFpbGFiaWxpdGllc1Jlc3BvbnNlVHlwZT4gPT4ge1xuICAgICAgdHJ5IHtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgL2FwaS9zb2wvcHJvdmlkZXJzLyR7cHJvdmlkZXJJZH0vYXZhaWxhYmlsaXR5YCwge1xuICAgICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgICd4LXNvbC1hcGktdXJsJzogYmFzZVVybCxcbiAgICAgICAgICB9LFxuICAgICAgICB9KTtcblxuICAgICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBGYWlsZWQgdG8gZmV0Y2ggYXZhaWxhYmlsaXR5IGZvciBwcm92aWRlciAke3Byb3ZpZGVySWR9OiAke3Jlc3BvbnNlLnN0YXR1c1RleHR9YCk7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCByYXdEYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuXG4gICAgICAgIC8vIFRyYW5zZm9ybSBkYXRlIHN0cmluZ3MgdG8gRGF0ZSBvYmplY3RzXG4gICAgICAgIGNvbnN0IHRyYW5zZm9ybWVkRGF0YSA9IHRyYW5zZm9ybUF2YWlsYWJpbGl0eURhdGVzKHJhd0RhdGEpO1xuXG4gICAgICAgIGNvbnNvbGUubG9nKCdBdmFpbGFiaWxpdHkgZGF0YSB0cmFuc2Zvcm1lZDonLCB7XG4gICAgICAgICAgcmF3OiByYXdEYXRhPy5kYXRhPy5bcHJvdmlkZXJJZF0/LlswXSxcbiAgICAgICAgICB0cmFuc2Zvcm1lZDogdHJhbnNmb3JtZWREYXRhPy5kYXRhPy5bcHJvdmlkZXJJZF0/LlswXVxuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4gdHJhbnNmb3JtZWREYXRhO1xuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgYXZhaWxhYmlsaXR5OicsIGVycm9yKTtcbiAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICB9XG4gICAgfSxcbiAgICBbYmFzZVVybF1cbiAgKTtcblxuICByZXR1cm4geyBmZXRjaEF2YWlsYWJpbGl0eSB9O1xufTsiXSwibmFtZXMiOlsidXNlQ2FsbGJhY2siLCJ0cmFuc2Zvcm1BdmFpbGFiaWxpdHlEYXRlcyIsImRhdGEiLCJBcnJheSIsImlzQXJyYXkiLCJtYXAiLCJzbG90Iiwic2xvdHN0YXJ0IiwiRGF0ZSIsInVzZUF2YWlsYWJpbGl0eSIsImJhc2VVcmwiLCJmZXRjaEF2YWlsYWJpbGl0eSIsInByb3ZpZGVySWQiLCJyYXdEYXRhIiwidHJhbnNmb3JtZWREYXRhIiwicmVzcG9uc2UiLCJmZXRjaCIsImhlYWRlcnMiLCJvayIsIkVycm9yIiwic3RhdHVzVGV4dCIsImpzb24iLCJjb25zb2xlIiwibG9nIiwicmF3IiwidHJhbnNmb3JtZWQiLCJlcnJvciJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/hooks/useAvailability.ts\n"));

/***/ })

});